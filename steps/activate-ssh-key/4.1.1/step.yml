title: Activate SSH key (RSA private key)
summary: Add your SSH key to the build machine to access private repositories
description: |-
  This Step makes sure Bitrise has access to your repository when cloning SSH URLs. The Step saves the provided private key of your SSH keypair to a file and then loads it into the SSH agent.

  ### Configuring the Step

  By default, you do not have to change anything about the Step's configuration.

  The step downloads the SSH key defined in your App Settings, so most of the time it's the only thing you need to configure ([more info](https://devcenter.bitrise.io/en/connectivity/configuring-ssh-keys).

   All you need to do is make sure that you registered your key pair on Bitrise and the public key at your Git provider. You can generate and register an SSH keypair in two ways.

  - Automatically during the [app creation process](https://devcenter.bitrise.io/getting-started/adding-a-new-app/#setting-up-ssh-keys).
  - Manually during the app creation process or at any other time. You [generate your own SSH keys](https://devcenter.bitrise.io/faq/how-to-generate-ssh-keypair/) and register them on Bitrise and at your Git provider. The SSH key should not have a passphrase!

  Note: if you configure to use HTTPS instead of SSH git access, you don't need to use this Step.

  ### Troubleshooting

  If the Step fails, check the public key registered to your Git repository and compare it to the public key registered on Bitrise. The most frequent issue is that someone deleted or revoked the key on your Git provider's website.

  You can also set the **Enable verbose logging** input to `true`. This provides additional information in the log.

  ### Useful links

  - [Setting up SSH keys](https://devcenter.bitrise.io/getting-started/adding-a-new-app/#setting-up-ssh-keys)
  - [How can I generate an SSH key pair?](https://devcenter.bitrise.io/faq/how-to-generate-ssh-keypair/)

  ### Related Steps

  - [Git Clone Repository](https://www.bitrise.io/integrations/steps/git-clone)
website: https://github.com/bitrise-steplib/steps-activate-ssh-key
source_code_url: https://github.com/bitrise-steplib/steps-activate-ssh-key
support_url: https://github.com/bitrise-steplib/steps-activate-ssh-key/issues
published_at: 2024-02-15T10:28:29.203495657Z
source:
  git: https://github.com/bitrise-steplib/steps-activate-ssh-key.git
  commit: 78dae4ddaa4a2c3eddb35a3fc620b5fdf29fc82c
type_tags:
- access-control
toolkit:
  go:
    package_name: github.com/bitrise-steplib/steps-activate-ssh-key
deps:
  apt_get:
  - name: expect
  - name: git
is_always_run: false
is_skippable: false
run_if: .IsCI
inputs:
- opts:
    description: The private key of the SSH keypair in RSA format.
    is_dont_change_value: true
    is_expand: true
    is_sensitive: true
    title: SSH private key content
  ssh_rsa_private_key: $SSH_RSA_PRIVATE_KEY
- opts:
    description: Path where the private key should be saved
    is_dont_change_value: true
    is_expand: true
    title: SSH key save path
  ssh_key_save_path: $HOME/.ssh/bitrise_step_activate_ssh_key
- is_remove_other_identities: "true"
  opts:
    description: |-
      When the step detects a running SSH agent and this input is true, it removes all loaded identities and restarts the agent before loading the configured key.

      When there is no running SSH agent, this input has no effect.

      Note: this only affects the in-memory SSH agent data, keys on disk are not touched.

      Options:

      * "true"
      * "false"
    is_expand: false
    title: Remove other identities from SSH agent
    value_options:
    - "true"
    - "false"
- opts:
    description: Enable verbose log option for better debug
    is_expand: true
    is_required: true
    summary: Enable verbose log option for better debug
    title: Enable verbose logging
    value_options:
    - "true"
    - "false"
  verbose: "false"
outputs:
- SSH_AUTH_SOCK: null
  opts:
    description: |-
      If the `is_should_start_new_agent` option is enabled, and no accessible ssh-agent is found, the step will start a new ssh-agent.

      This output contains the path of the socket created by ssh-agent, which can be used to access the started ssh-agent ([learn more](https://www.man7.org/linux/man-pages/man1/ssh-agent.1.html))
    title: SSH agent socket path
