title: SPM-dependency-checker
summary: |
  Uses Dependency check by jeremylong to search Swift package manager files to find CVE vulnerabilities
description: |
  This custom Bitrise step leverages jeremylong's GitHub repository to scan and identify Common Vulnerabilities and Exposures (CVEs) in Swift Package Manager (SPM) dependencies for iOS projects. By integrating this step into your CI/CD pipeline, you can ensure that your iOS application's dependencies are regularly checked for known security vulnerabilities, helping to maintain a secure codebase.
website: https://github.com/simonwhitehouse/bitrise-step-spm-dependency-checker
source_code_url: https://github.com/simonwhitehouse/bitrise-step-spm-dependency-checker
support_url: https://github.com/simonwhitehouse/bitrise-step-spm-dependency-checker/issues
published_at: 2024-11-21T11:50:22.399031Z
source:
  git: https://github.com/simonwhitehouse/bitrise-step-spm-dependency-checker.git
  commit: 985a21ba24c76c954660977286b266751fb95fa5
type_tags:
- dependency
toolkit:
  bash:
    entry_file: step.sh
inputs:
- fail_on_cvss_level: 11
  opts:
    description: |
      The Common Vulnerability Scoring System (CVSS) score threshold. If any vulnerability is found with a score equal to or higher than this value, the build will fail.

      Can be a decimal value between 0.0 and 10.0.
    is_expand: true
    is_required: true
    summary: The CVSS score threshold to fail the build.
    title: Fail on CVSS Level
    value_options: []
- app_title: iOS Application
  opts:
    description: |
      The name or title of the iOS project for which the dependencies are being scanned.

      This will be used in the generated report.
    is_expand: true
    is_required: true
    summary: The title of the project being scanned.
    title: App Title
    value_options: []
- opts:
    description: |
      The path to the `Package.swift` file that defines the dependencies for the iOS project. If nothing is passed here, the scan will be done at root
    is_expand: true
    is_required: false
    summary: The path to the Swift Package Manager file.
    title: SPM File Path
    value_options: []
  spm_file_path: $BITRISE_SOURCE_DIR
- opts:
    description: |
      The format of the report generated by the vulnerability scan.

      Supported formats include HTML, XML, CSV, JSON, JUNIT, SARIF, JENKINS, GITLAB or ALL.
    is_expand: true
    is_required: true
    summary: The format of the generated scan report.
    title: Output File Format
    value_options:
    - HTML
    - JSON
    - XML
    - CSV
    - JUNIT
    - SARIF
    - JENKINS
    - GITLAB
    - ALL
  output_file_format: HTML
- api_key: ""
  opts:
    description: |
      Please sign up here `https://nvd.nist.gov/developers/request-an-api-key`. Although the API is not required, not providing one makes this step very slow.
    is_expand: true
    is_required: false
    summary: The API key for accessing the vulnerability database.
    title: API Key
    value_options: []
- opts:
    description: |
      Set this to 'yes' to fetch updates. If set to 'no', it will not update.
    is_expand: true
    is_required: false
    summary: Whether it should update or not
    title: Whether the databased should be updated before scanning
    value_options:
    - "yes"
    - "no"
  should_update: "no"
