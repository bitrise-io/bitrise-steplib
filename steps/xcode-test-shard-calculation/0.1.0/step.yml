title: Xcode test shard calculation
summary: Calculates the test shards for your Xcode tests.
description: |-
  This step looks at the test bundle and calculates the test shards for your Xcode tests. It finds all of the tests and
  divides them into the specified number of shards.

  These shards can be used to run the tests in parallel, which can significantly speed up the testing process. Use the
  [Xcode Test without building](https://www.bitrise.io/integrations/steps/xcode-test-without-building) step's `Test Selection`
  input to specify which test shard information to use.

  ### Related Steps
  - [Xcode Test without building](https://www.bitrise.io/integrations/steps/xcode-test-without-building)
website: https://github.com/bitrise-steplib/bitrise-step-xcode-test-shard-calculation
source_code_url: https://github.com/bitrise-steplib/bitrise-step-xcode-test-shard-calculation
support_url: https://github.com/bitrise-steplib/bitrise-step-xcode-test-shard-calculation
published_at: 2025-03-11T14:43:19.494898+01:00
source:
  git: https://github.com/bitrise-steplib/bitrise-step-xcode-test-shard-calculation.git
  commit: ac4c181d6d1920a87808ea9771eb47ebfea4d6d2
project_type_tags:
- ios
- macos
- react-native
- cordova
- ionic
- flutter
type_tags:
- test
toolkit:
  go:
    package_name: github.com/bitrise-steplib/bitrise-step-xcode-test-shard-calculation
inputs:
- opts:
    description: |-
      The path of the test bundle.

      The step supports the following formats:
      - xcresrun
      - xctestproducts

      It will use the specified file to collect the built tests and generate the test shards.
    is_required: true
    summary: The path of the test bundle.
    title: Product path
  product_path: null
- opts:
    description: |-
      The number of test shards to create.

      The output folder will contain `shard_count` number of files, each containing the tests to run in that shard.
    is_required: true
    summary: The number of test shards to create.
    title: Shard count
  shard_count: null
- opts:
    description: |-
      Defines the strategy to use when splitting the tests into shards

      The available options are:
      - `alphabetically`: The tests are sorted alphabetically and split into shards
    is_required: true
    summary: Defines the strategy to use when splitting the tests into shards
    title: Shard calculation strategy
    value_options:
    - alphabetically
  shard_calculation: alphabetically
- destination: platform=iOS Simulator,name=Bitrise iOS default,OS=latest
  opts:
    description: |-
      Destination specifier describes the device to use as a destination.

      The input value sets xcodebuild's `-destination` option.

      In a CI environment, a Simulator device called `Bitrise iOS default` is already created.
      It is a compatible device with the selected Simulator runtime, pre-warmed for better performance.

      If a device with this name is not found (e.g. in a local dev environment), the first matching device will be selected.
    is_required: true
    summary: Destination specifier describes the device to use as a destination.
    title: Device destination specifier
- opts:
    category: Debugging
    is_required: true
    summary: Enable logging additional information for debugging.
    title: Enable verbose logging
    value_options:
    - "true"
    - "false"
  verbose: "false"
outputs:
- BITRISE_TEST_SHARDS_PATH: null
  opts:
    summary: This folder contains the generated test shard information.
    title: Test shards location
