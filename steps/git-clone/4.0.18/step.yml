title: Git Clone Repository
summary: The Step checks out the defined repository state, optionally updates the
  repository submodules and exports the achieved git repository state properties.
description: "The checkout process depends on the checkout properties: the Step either
  checks out a repository state defined by a git commit or a git tag, or achieves
  a merged state of a pull / merge request.\nThe Step uses two solutions to achieve
  the merged state of the pull / merge request: auto merge in the case of a merge
  branch or diff file (provided by the Git service) and manual merge otherwise.\nOnce
  the desired state is checked out, the Step optionally updates the submodules. In
  the case of pull / merge request, the Step checks out a detach head and exports
  the achieved git state properties.\n\n### Configuring the Step\n\n1. The **Git repository
  URL** and the ** Clone destination (local)directory path** fields are required fields
  and are automatically filled out based on your project settings.\nOptionally, you
  can modify the following fields in the **Clone Config** section:\n1. You can set
  the **Update the registered submodules?** option to `yes` to pull the most up-to-date
  version of the submodule from the submodule's repository.\n2. You can set the number
  of commits you want the Step to fetch in the **Limit fetching to the specified number
  of commits** option. Make sure you set a decimal number.\n\nOther **Clone config**
  inputs are not editable unless you go to the **bitrise.yml** tab, however, to avoid
  issues, we suggest you to contact our Support team instead.\n\n### Troubleshooting\nIf
  you have GitHub Enterprise set up, it works slightly differently on [bitrise.io](https://www.bitrise.io)
  than on [github.com](https://github.com). You have to manually set the git clone
  URL, register the SSH key and the webhook.\nIf you face network issues in the case
  of self-hosted git servers, we advise you to contact our Support Team to help you
  out.\nIf you face slow clone speed, set the **Limit fetching to the specified number
  of commits** to the number of commits you want to clone instead of cloning the whole
  commit history or you can use the Git LFS solution provided by the git provider.\n
  \n### Useful links\n\n- [How to register a GitHub Enterprise repository](https://discuss.bitrise.io/t/how-to-register-a-github-enterprise-repository/218)\n-
  [Code security](https://devcenter.bitrise.io/getting-started/code-security/)\n\n###
  Related Steps\n \n- [Activate SSH key (RSA private key)](https://www.bitrise.io/integrations/steps/activate-ssh-key)\n-
  [Bitrise.io Cache:Pull](https://www.bitrise.io/integrations/steps/cache-pull)\n-
  [Bitrise.io Cache:Push](https://www.bitrise.io/integrations/steps/cache-push)\n"
website: https://github.com/bitrise-io/steps-git-clone
source_code_url: https://github.com/bitrise-io/steps-git-clone
support_url: https://github.com/bitrise-io/steps-git-clone/issues
published_at: 2020-01-13T08:37:25.302420699Z
source:
  git: https://github.com/bitrise-steplib/steps-git-clone.git
  commit: d8133ebb9901197608c843624ecc511636e2fd02
type_tags:
- utility
toolkit:
  go:
    package_name: github.com/bitrise-io/steps-git-clone
is_requires_admin_user: false
is_always_run: false
is_skippable: false
run_if: .IsCI
inputs:
- opts:
    is_dont_change_value: true
    is_required: true
    title: Git repository URL
  repository_url: $GIT_REPOSITORY_URL
- clone_into_dir: $BITRISE_SOURCE_DIR
  opts:
    is_required: true
    title: Clone destination (local) directory path
- commit: $BITRISE_GIT_COMMIT
  opts:
    category: Clone Config
    is_dont_change_value: true
    title: Git Commit to clone
- opts:
    category: Clone Config
    is_dont_change_value: true
    title: Git Tag to clone
  tag: $BITRISE_GIT_TAG
- branch: $BITRISE_GIT_BRANCH
  opts:
    category: Clone Config
    is_dont_change_value: true
    title: Git Branch to clone
- branch_dest: $BITRISEIO_GIT_BRANCH_DEST
  opts:
    category: Clone Config
    is_dont_change_value: true
    title: Destination git Branch, used for pull requests
- opts:
    category: Clone Config
    is_dont_change_value: true
    title: Pull request ID on GitHub
  pull_request_id: $PULL_REQUEST_ID
- opts:
    category: Clone Config
    is_dont_change_value: true
    title: Pull request git URL
  pull_request_repository_url: $BITRISEIO_PULL_REQUEST_REPOSITORY_URL
- opts:
    category: Clone Config
    is_dont_change_value: true
    title: Merged pull request branch
  pull_request_merge_branch: $BITRISEIO_PULL_REQUEST_MERGE_BRANCH
- opts:
    category: Clone Config
    description: Update the registered submodules?
    summary: Update the registered submodules?
    title: Update the registered submodules?
    value_options:
    - "yes"
    - "no"
  update_submodules: "yes"
- clone_depth: null
  opts:
    category: Clone Config
    description: |-
      Limit fetching to the specified number of commits.
      The value should be a decimal number, for example `10`.
    title: Limit fetching to the specified number of commits
- opts:
    category: Debug
    summary: Reset repository contents with git reset --hard HEAD and git clean -f
      after repository updated
    title: Reset repository
    value_options:
    - "No"
    - "Yes"
  reset_repository: "No"
- manual_merge: "yes"
  opts:
    category: Debug
    description: |-
      Prefer to do a manual `git merge` by default.
      When the Pull Request is from a GitHub or Bitbucket private fork repository set this to `"no"`.
    summary: Prefer to do a manual `git merge` by default.
    title: Manual merge
    value_options:
    - "yes"
    - "no"
- build_url: $BITRISE_BUILD_URL
  opts:
    category: Debug
    description: Unique build URL of this build on Bitrise.io
    is_dont_change_value: true
    summary: Unique build URL of this build on Bitrise.io
    title: Bitrise Build URL
- build_api_token: $BITRISE_BUILD_API_TOKEN
  opts:
    category: Debug
    description: The build's API Token for the build on Bitrise.io
    is_dont_change_value: true
    is_sensitive: true
    summary: The build's API Token for the build on Bitrise.io
    title: Bitrise Build API Token
outputs:
- GIT_CLONE_COMMIT_HASH: null
  opts:
    title: Cloned git commit's commit hash
- GIT_CLONE_COMMIT_MESSAGE_SUBJECT: null
  opts:
    title: Cloned git commit's message subject
- GIT_CLONE_COMMIT_MESSAGE_BODY: null
  opts:
    title: Cloned git commit's message body
- GIT_CLONE_COMMIT_COUNT: null
  opts:
    description: |-
      Count will only work properly if no `--depth` option is set.

      If `--depth` is set then the history truncated to the specified number of commits. Count will **not** fail but will be the clone depth.
    title: Cloned git commit counts
- GIT_CLONE_COMMIT_AUTHOR_NAME: null
  opts:
    title: Cloned git commit's author name
- GIT_CLONE_COMMIT_AUTHOR_EMAIL: null
  opts:
    title: Cloned git commit's author email address
- GIT_CLONE_COMMIT_COMMITER_NAME: null
  opts:
    title: Cloned git commit's committer name
- GIT_CLONE_COMMIT_COMMITER_EMAIL: null
  opts:
    title: Cloned git commit's committer email
