title: Deploy to iTunes Connect
summary: Upload screenshots, metadata and binaries to [App Store Connect (iTunes Connect)](https://appstoreconnect.apple.com/)
  and submit your app for App Store review.
description: "Upload screenshots, metadata and binaries to [App Store Connect (iTunes
  Connect)](https://appstoreconnect.apple.com/) and submit your app for App Store
  review,\nusing the fantastic [deliver](https://docs.fastlane.tools/actions/deliver/)
  fastlane action. You can upload iOS, macOS, or Apple TV apps with the Step.\n\nThis
  Step, however, does NOT build your binary: to create an IPA or PKG file, you need
  the right version of the **Xcode Archive** Step, or any other Step that is capable
  of building a binary file.  \n\n### Configuring the Step \n\nBefore you start using
  this Step, you need to do a couple of things:\n\n* Register an app on the **My Apps**
  page of App Store Connect. Click on the *plus sign* and select the **New App** option.
  This requires an **admin** account.\n* This Step requires an app signed with App
  Store Distibution provisioning profile. Make sure that you use the correct code
  signing files and the correct export method with the Step that builds your binary.\n*
  Every build that you want to push to App Store Connect must have a unique build
  and version number pair. Increment either or both before a new deploy to App Store
  Connect.\n\nTo deploy your app with the Step: \n1. Make sure that either the **IPA
  path** or the **PKG path** input has a valid value. The default value is perfect
  for most cases: it points to the output generated by the **Xcode Archive** Step.\n1.
  Set up your connection depending on which authentication method you wish to use:\n
  \   - Use a previously set up Bitrise Apple Developer Connection, set the **Bitrise
  Apple Developer Connection** to `automatic` (default), `api_key` or `apple_id`.\n
  \   - Provide manual step inputs, either with Apple ID or with the App Store Connet
  API key. Set the **Bitrise Apple Developer Connection** to `off`. Use only one of
  the authentication methods. \n        * For the Apple ID: Fill out the **Apple ID:
  Email**, **Apple ID: Password**. Add the **Apple ID: Application specific password**
  if you wish to bypass two-factor authentication.\n        * For the App Store Connect
  API: Provide your **API Key: URL** (for example, https://URL/TO/AuthKey_something.p8
  or file:///PATH/TO/AuthKey_something.p8) and the **API Key: Issuer ID** inputs.
  Please note that connecting with the App Store Connect API works with XCode 11.0
  and above releases.  \n1. To identify the app, set either the **App Store Connect
  App ID** or the **App Bundle ID**. Note that while neither is marked as **Required**,
  one of the two MUST have a valid value. \n1. If you want to immediately submit your
  app for an App Store review, set the **Submit for Review?** input to `yes`. Please
  note that if you do submit the app for review, the Step will be successful only
  if the submission is accepted by App Store Connect.\n\n### Troubleshooting\n\nMake
  sure your Apple ID credentials are correct. Be aware that if you use two-factor
  authentication, you need to submit an application-specific password.\n\nAlways make
  sure that **Platform** input is set to the correct value.\n\nThe Step can also fail
  if the **Xcode Archive** Step - or any other Step that builds your binary - did
  not generate an IPA or PKG with a `app-store` export method. \n\n### Useful links
  \n\n- [Deploying an app to App Store Connect](https://devcenter.bitrise.io/deploy/ios-deploy/deploying-an-ios-app-to-itunes-connect/)\n-
  [iOS deployment](https://devcenter.bitrise.io/deploy/ios-deploy/ios-deploy-index/)\n\n###
  Related Steps \n\n- [Deploy to Google Play](https://www.bitrise.io/integrations/steps/google-play-deploy)\n-
  [Xcode Archive & Export for iOS](https://www.bitrise.io/integrations/steps/xcode-archive)\n-
  [Appetize.io deploy](https://www.bitrise.io/integrations/steps/appetize-deploy)"
website: https://github.com/bitrise-steplib/steps-deploy-to-itunesconnect-deliver
source_code_url: https://github.com/bitrise-steplib/steps-deploy-to-itunesconnect-deliver
support_url: https://github.com/bitrise-steplib/steps-deploy-to-itunesconnect-deliver/issues
published_at: 2021-02-02T16:05:29.2418338Z
source:
  git: https://github.com/bitrise-steplib/steps-deploy-to-itunesconnect-deliver.git
  commit: 7c20293c7cf0e967ad6274bfdc0f55643acc5218
host_os_tags:
- osx-10.10
project_type_tags:
- ios
- macos
- xamarin
- cordova
- ionic
- react-native
- flutter
type_tags:
- deploy
toolkit:
  go:
    package_name: github.com/bitrise-steplib/steps-deploy-to-itunesconnect-deliver
deps:
  brew:
  - name: go
  apt_get:
  - name: golang
    bin_name: go
is_requires_admin_user: false
is_always_run: false
is_skippable: false
inputs:
- connection: automatic
  opts:
    description: |-
      The input determines the method used for Apple Service authentication. By default, any enabled Bitrise Apple Developer connection is used and other authentication-related Step inputs are ignored.

      There are two types of Apple Developer connection you can enable on Bitrise: one is based on an API key of the App Store Connect API, the other is the legacy method of session-based authentication with an Apple ID. You can choose which type of Bitrise Apple Developer connection to use or you can tell the Step to only use Step inputs for authentication:
      - `automatic`: Use any enabled Apple Developer connection, either based on Apple ID authentication or API key authentication.  Step inputs are only used as a fallback. API key authentication has priority over Apple ID authentication in both cases.
      - `api_key`: Use the Apple Developer connection based on API key authentication. Authentication-related Step inputs are ignored.
      - `apple_id`: Use the Apple Developer connection based on Apple ID authentication and **Application-specific password** Step input. Other authentication-related Step inputs are ignored.
      - `off`: Do not use any Apple Developer Connection. Only authentication-related Step inputs are considered.
    is_required: true
    summary: The Apple Service authentication method the Step uses. By default, any
      enabled Bitrise Apple Developer connection is used and other authentication-related
      Step inputs are ignored.
    title: Bitrise Apple Developer Connection
    value_options:
    - automatic
    - api_key
    - apple_id
    - "off"
- api_key_path: ""
  opts:
    description: |-
      Specify the path in an URL format where your API key is stored.
      For example: `https://URL/TO/AuthKey_something.p8` or `file:///PATH/TO/AuthKey_something.p8`.


      You can upload your key on the **Generic File Storage** tab in the Workflow Editor and set the environment variable for the file here.


      For example: `$BITRISEIO_MYKEY_URL`
    summary: Path to local or remote file
    title: 'API Key: URL'
- api_issuer: ""
  opts:
    description: 'Issuer ID. Required if **API Key: URL** (`api_key_path`) is specified.'
    title: 'API Key: Issuer ID'
- itunescon_user: ""
  opts:
    description: Email for Apple ID login.
    is_sensitive: true
    summary: Email for Apple ID login.
    title: 'Apple ID: Email'
- opts:
    description: Password for the specified Apple ID.
    is_sensitive: true
    title: 'Apple ID: Password'
  password: ""
- app_password: ""
  opts:
    description: |-
      An application-specific password for the Apple ID.
      **NOTE:** Application-specific passwords can be created on the
      [AppleID Website](https://appleid.apple.com). It can be used to
      bypass two-factor authentication.
    is_sensitive: true
    summary: Required if using Apple ID
    title: 'Apple ID: Application-specific password'
- opts:
    description: |-
      The app's *Team ID* on App Store Connect.
      **NOTE:** This field or the **Apple ID: Team name** is required when authenticating using Apple ID and the account
      is linked to multiple publishing teams.

      For example: `2040826`
    title: 'Apple ID: Team ID'
  team_id: ""
- opts:
    description: |-
      The app's *Team Name* on App Store Connect.
      **NOTE:** This field or the **Apple ID: Team ID** is required when authenticating using Apple ID and the account
      is linked to multiple publishing teams.
    title: 'Apple ID: Team name'
  team_name: ""
- ipa_path: $BITRISE_IPA_PATH
  opts:
    description: |-
      Path to your IPA file to be deployed.
      **NOTE:** This input or the **PKG path** is required.
    title: IPA path
- opts:
    description: |-
      Path to your PKG file to be deployed.
      **NOTE:** This input or the **IPA path** is required.
    title: PKG path
  pkg_path: $BITRISE_PKG_PATH
- opts:
    description: The platform of the app.
    is_required: true
    title: Platform
    value_options:
    - ios
    - osx
    - appletvos
  platform: ios
- app_id: ""
  opts:
    description: |-
      The app's *Apple ID* on App Store Connect.
      **NOTE:** This input or the **App Bundle ID** is required.
      Open the **app's page on App Store Connect**, click on **App Information**,
      from the **General Information** section,
      copy the **Apple ID**'s value from here. It's a numeric value, for example, 846814360.
    summary: App Store Connect App ID (Apple ID)
    title: App Store Connect App ID
- bundle_id: ""
  opts:
    description: |-
      The app's *Bundle ID* on App Store Connect.
      **NOTE:** This input or the **App Store Connect App ID** is required.
    title: App Bundle ID
- opts:
    description: |
      Wait for the submission to be processed and then
      submit the app for review for this specific version?
      If this option is set to `no`, the Step won't wait
      for the new version to be processed on App Store Connect
      and won't submit it for review automatically.
      If this input is set to `yes`, the Step will wait for the submission to be
      processed which might take a couple of minutes after the
      new version is deployed to App Store Connect. Note that in this case the Step will only be successful if the submission is accepted by App Store Connect!
    is_required: true
    title: Submit for Review?
    value_options:
    - "yes"
    - "no"
  submit_for_review: "no"
- opts:
    description: Don't upload the metadata. This will still upload screenshots.
    is_required: true
    title: Skip metadata?
    value_options:
    - "yes"
    - "no"
  skip_metadata: "yes"
- opts:
    description: Don't upload the screenshots.
    is_required: true
    title: Skip screenshots?
    value_options:
    - "yes"
    - "no"
  skip_screenshots: "yes"
- opts:
    description: Don't update the app version for submission.
    is_required: true
    title: Skip app Version update?
    value_options:
    - "yes"
    - "no"
  skip_app_version_update: "no"
- gemfile_path: ./Gemfile
  opts:
    category: Debug
    description: |
      Path to the `Gemfile` which contains the `fastlane` gem.
      If a `Gemfile` doesn't exist or doesn't contain the `fastlane` gem and
      if the **fastlane version** input isn't specified, the latest fastlane version will be used.
    title: Gemfile path
- fastlane_version: latest-stable
  opts:
    category: Debug
    description: |-
      This option lets you specify a version of the **fastlane** gem to be installed.
      - `latest-stable` installs the latest stable version.
      - `latest` installs the latest version of fastlane including pre-release (release candidate) versions.
    title: fastlane version
- options: null
  opts:
    category: Debug
    description: |-
      Options added to the end of the `deliver` call.
      If you want to add more options, list those separated by space character.
      Example: `--skip_metadata --skip_screenshots`
    title: Additional options for `deliver` call
- itms_upload_parameters: -t DAV
  opts:
    category: Debug
    description: |-
      `deliver` uses the iTunes Transporter to upload metadata and binaries.
      If you are behind a firewall, you can specify a different transporter protocol using this input.
      Read more on Apple [Transporter User Guide](https://help.apple.com/itc/transporteruserguide/#/apdATD1E1288-D1E1A1303-D1E1288A1126).
    title: Transporter delivery method
- opts:
    category: Debug
    description: Enable verbose logging?
    is_required: true
    title: Enable verbose logging?
    value_options:
    - "yes"
    - "no"
  verbose_log: "no"
