title: Swift Environment Variable Injector
summary: |
  Step to inject static values from environment variables into Swift code files before compilation and Continuous deployment allowing us to not expose our production keys and values in statically in our code and store sensitive values  safe.
description: |
  TThis step allows us to inject CI pipelines environment variables values into Swift code  static values before compilation and Continuous deployment to a specific environment(Development, Testing or Production) where we can define the values injected for each build and deployment e.g. a API url that the App uses and is different for each environment. Also it allows us to not expose our production keys and values in statically in our code.
website: https://github.com/LucianoPAlmeida/bitrise-step-swift-envirionment-variable-injector
source_code_url: https://github.com/LucianoPAlmeida/bitrise-step-swift-envirionment-variable-injector
support_url: https://github.com/LucianoPAlmeida/bitrise-step-swift-envirionment-variable-injector/issues
published_at: 2018-11-06T00:09:14.109021734-02:00
source:
  git: https://github.com/LucianoPAlmeida/bitrise-step-swift-envirionment-variable-injector.git
  commit: 09112ef905f97aa5ea6a4c68722cae2e023ee4fe
host_os_tags:
- osx-10.10
project_type_tags:
- ios
- macos
type_tags:
- dependency
toolkit:
  bash:
    entry_file: step.sh
deps:
  brew:
  - name: git
  - name: wget
  - name: curl
  - name: unzip
is_requires_admin_user: true
is_always_run: false
is_skippable: false
run_if: ""
inputs:
- opts:
    description: Variable Injector version to be used. Step will fail if invalid or
      non-existent is specified.
    is_required: true
    title: Swift Variable Injector Version
  variable_injector_version: 0.2.0
- files: null
  opts:
    description: |
      All the file paths separated by a white space.
      The files will be visited by the [variable-injector](https://github.com/LucianoPAlmeida/variable-injector).
      If there are literals matching the ENV_VAR pattern and the environment variable name is defined on the current workflow it will replace with it value.
    is_expand: true
    is_required: true
    summary: The paths for the files which you be checked and have the values replaced
      if it's aplicable.
    title: Paths of the Swift files
- opts:
    description: "All the names paths separated by a white space.\nIf a string literal
      on this files matches the environment variable pattern $(ENV_VAR) but is not
      a ENV var to be replaced we can just ignore it. \n"
    is_expand: true
    is_required: false
    summary: The variable names that will be ignored by the variable injector.
    title: Environment Variable Names to ignore
  vars_to_ignore: null
- opts:
    description: |
      All injectictions variables and values logged. Also the output files content.
    is_expand: true
    is_required: false
    summary: Indicates if the injection should print logs.
    title: Verbose mode
    value_options:
    - true
    - false
  verbose: false
